{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tBodies","body","winMessage","loseMessage","startMessage","startButton","scoreTable","DELAY","scoreCounter","isEnd","counterOf2","merge","currentCell","neighborCell","direction","currentNum","innerText","underNum","classList","add","i","j","children","remove","rebaseX","xCell","position","emptyCell","createElement","before","after","replaceWith","rebaseY","yCell","createCell","maxLength","randomRow","Math","floor","random","randomPosition","randomCell","goDown","amountOfCycles","currentRow","leftCell","rightCell","lowerCell","lowerNum","isFirstCell","firstElementChild","goUp","upperCell","upperNum","goLeft","leftNum","goRight","rightNum","addEventListener","newCell","className","e","filledCellAmount","key","setTimeout"],"mappings":"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","file":"main.d897080a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table').tBodies[0];\nconst body = document.body;\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst startMessage = document.querySelector('.message-start');\nconst startButton = document.querySelector('.start');\nconst scoreTable = document.querySelector('.game-score');\nconst DELAY = 300;\n\nlet scoreCounter = 0;\nlet isEnd = true;\nlet counterOf2 = 0;\n\nstartButton.addEventListener('click', () => {\n  startButton.innerText = 'Restart';\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  isEnd = false;\n  counterOf2 = 0;\n  scoreCounter = 0;\n  scoreTable.innerText = 0;\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  startMessage.classList.add('hidden');\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      const newCell = table.children[i].children[j];\n\n      newCell.className = 'field-cell';\n      newCell.innerText = '';\n    }\n  }\n\n  createCell();\n  createCell();\n});\n\nbody.addEventListener('keydown', (e) => {\n  let filledCellAmount = 1;\n\n  if (isEnd) {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowDown':\n      goDown();\n\n      setTimeout(() => {\n        createCell();\n      }, DELAY);\n      break;\n\n    case 'ArrowUp':\n      goUp();\n\n      setTimeout(() => {\n        createCell();\n      }, DELAY);\n      break;\n\n    case 'ArrowLeft':\n      goLeft();\n\n      setTimeout(() => {\n        createCell();\n      }, DELAY);\n      break;\n\n    case 'ArrowRight':\n      goRight();\n\n      setTimeout(() => {\n        createCell();\n      }, DELAY);\n      break;\n  }\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      const currentCell = table.children[i].children[j];\n\n      if (currentCell.innerText) {\n        ++filledCellAmount;\n      } else {\n        currentCell.className = 'field-cell';\n      }\n    }\n  }\n\n  if (filledCellAmount === 16) {\n    loseMessage.classList.remove('hidden');\n    isEnd = true;\n  }\n});\n\nfunction merge(currentCell, neighborCell, direction) {\n  const currentNum = +currentCell.innerText;\n  const underNum = +neighborCell.innerText;\n\n  currentCell.innerText = '';\n  neighborCell.classList.add('field-cell');\n  neighborCell.innerText = underNum + currentNum;\n  neighborCell.classList.add('field-cell--' + (underNum + currentNum));\n\n  scoreCounter += underNum + currentNum;\n  scoreTable.innerText = scoreCounter;\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      const cell = table.children[i].children[j];\n\n      if (cell.innerText === '2048') {\n        winMessage.classList.remove('hidden');\n        isEnd = true;\n      }\n    }\n  }\n}\n\nfunction rebaseX(currentCell, xCell, position) {\n  const emptyCell = document.createElement('td');\n\n  if (position === 'before') {\n    currentCell.before(emptyCell);\n  }\n\n  if (position === 'after') {\n    currentCell.after(emptyCell);\n  }\n\n  emptyCell.classList.add('field-cell');\n\n  xCell.replaceWith(currentCell);\n}\n\nfunction rebaseY(currentCell, xCell, yCell, position) {\n  const emptyCell = document.createElement('td');\n\n  emptyCell.classList.add('field-cell');\n\n  if (position === 'before') {\n    xCell.before(emptyCell);\n  }\n\n  if (position === 'after') {\n    xCell.after(emptyCell);\n  }\n\n  yCell.replaceWith(currentCell);\n}\n\nfunction createCell() {\n  const maxLength = 4;\n  const randomRow = Math.floor(Math.random() * maxLength);\n  const randomPosition = Math.floor(Math.random() * maxLength);\n  const randomCell = table.children[randomRow].children[randomPosition];\n\n  randomCell.classList.add('field-cell', 'field-cell--2');\n\n  // if random cell is already exist create another random cell\n  if (!randomCell.innerText) {\n    counterOf2++;\n\n    counterOf2 % 10 === 0\n      ? randomCell.innerText = '4'\n      : randomCell.innerText = '2';\n  } else {\n    createCell();\n  }\n}\n\nfunction goDown() {\n  let amountOfCycles = 0;\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 4; j++) {\n      amountOfCycles = 0;\n\n      const currentRow = table.children[i];\n      const currentCell = currentRow.children[j];\n      const leftCell = currentRow.children[j - 1];\n      const rightCell = currentRow.children[j + 1];\n      const lowerCell = table.children[i + 1].children[j];\n\n      const currentNum = +currentCell.innerText;\n      const lowerNum = +lowerCell.innerText;\n      const isFirstCell = currentRow.firstElementChild === currentCell;\n\n      if (currentNum && !lowerNum && isFirstCell) {\n        rebaseY(currentCell, rightCell, lowerCell, 'before');\n        amountOfCycles++;\n      }\n\n      if (currentNum && !lowerNum && !isFirstCell) {\n        rebaseY(currentCell, leftCell, lowerCell, 'after');\n        amountOfCycles++;\n      }\n\n      if (currentNum && currentNum === lowerNum) {\n        merge(currentCell, lowerCell, 'down');\n      }\n\n      if (amountOfCycles > 0) {\n        goDown();\n      }\n    }\n  }\n}\n\nfunction goUp() {\n  let amountOfCycles = 0;\n\n  for (let i = 3; i >= 1; i--) {\n    for (let j = 3; j >= 0; j--) {\n      amountOfCycles = 0;\n\n      const currentRow = table.children[i];\n      const currentCell = currentRow.children[j];\n      const leftCell = currentRow.children[j - 1];\n      const rightCell = currentRow.children[j + 1];\n      const upperCell = table.children[i - 1].children[j];\n\n      const currentNum = +currentCell.innerText;\n      const upperNum = +upperCell.innerText;\n      const isFirstCell = currentRow.firstElementChild === currentCell;\n\n      if (currentNum && !upperNum && isFirstCell) {\n        rebaseY(currentCell, rightCell, upperCell, 'before');\n        amountOfCycles++;\n      }\n\n      if (currentNum && !upperNum && !isFirstCell) {\n        rebaseY(currentCell, leftCell, upperCell, 'after');\n        amountOfCycles++;\n      }\n\n      if (currentNum && currentNum === upperNum) {\n        merge(currentCell, upperCell, 'up');\n      }\n\n      if (amountOfCycles > 0) {\n        goUp();\n      }\n    }\n  }\n}\n\nfunction goLeft() {\n  let amountOfCycles = 0;\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 1; j < 4; j++) {\n      amountOfCycles = 0;\n\n      const currentCell = table.children[i].children[j];\n      const leftCell = table.children[i].children[j - 1];\n      const currentNum = +currentCell.innerText;\n      const leftNum = +leftCell.innerText;\n\n      if (currentNum && !leftNum) {\n        rebaseX(currentCell, leftCell, 'before');\n        amountOfCycles++;\n      }\n\n      if (currentNum && currentNum === leftNum) {\n        merge(currentCell, leftCell, 'left');\n      }\n\n      if (amountOfCycles > 0) {\n        goLeft();\n      }\n    }\n  }\n}\n\nfunction goRight() {\n  let amountOfCycles = 0;\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 3; j++) {\n      amountOfCycles = 0;\n\n      const currentCell = table.children[i].children[j];\n      const rightCell = table.children[i].children[j + 1];\n      const currentNum = +currentCell.innerText;\n      const rightNum = +rightCell.innerText;\n\n      if (currentNum && !rightNum) {\n        rebaseX(currentCell, rightCell, 'after');\n        amountOfCycles++;\n      }\n\n      if (currentNum && currentNum === rightNum) {\n        merge(currentCell, rightCell, 'right');\n      }\n\n      if (amountOfCycles > 0) {\n        goRight();\n      }\n    }\n  }\n}\n"]}